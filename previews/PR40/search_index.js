var documenterSearchIndex = {"docs":
[{"location":"generated/benchmarks/","page":"Benchmarks","title":"Benchmarks","text":"EditURL = \"https://github.com/Yujie-W/WaterPhysics.jl/blob/master/docs/src/examples/benchmarks.jl\"","category":"page"},{"location":"generated/benchmarks/#Examples","page":"Benchmarks","title":"Examples","text":"","category":"section"},{"location":"generated/benchmarks/","page":"Benchmarks","title":"Benchmarks","text":"# load packages\nusing BenchmarkTools\nusing WaterPhysics\nFT = Float32;\nnothing #hide","category":"page"},{"location":"generated/benchmarks/","page":"Benchmarks","title":"Benchmarks","text":"# define the variables\nrand_r = (rand(FT) + 20) * FT(1e-6);\nrand_T = rand(FT) + 298;\nrand_α = rand(FT) * 50;\nrand_Ψ = rand(FT) - 3;\n\ngas_air = TraceGasAir{FT}();\ngas_CO₂ = TraceGasCO₂{FT}();\nnothing #hide","category":"page"},{"location":"generated/benchmarks/#Capillary-pressure","page":"Benchmarks","title":"Capillary pressure","text":"","category":"section"},{"location":"generated/benchmarks/","page":"Benchmarks","title":"Benchmarks","text":"@info \"Benchmarking capillary_pressure functions...\";\n@btime capillary_pressure($rand_r, $rand_T);\n@btime capillary_pressure($rand_r, $rand_T, $rand_α);\nnothing #hide","category":"page"},{"location":"generated/benchmarks/#Diffusive-coefficient","page":"Benchmarks","title":"Diffusive coefficient","text":"","category":"section"},{"location":"generated/benchmarks/","page":"Benchmarks","title":"Benchmarks","text":"@info \"Benchmarking diffusive_coefficient functions...\";\n@btime diffusive_coefficient($rand_T, $gas_CO₂, $gas_air);\n@btime relative_diffusive_coefficient($rand_T);\nnothing #hide","category":"page"},{"location":"generated/benchmarks/#Latent-heat-of-evaporation","page":"Benchmarks","title":"Latent heat of evaporation","text":"","category":"section"},{"location":"generated/benchmarks/","page":"Benchmarks","title":"Benchmarks","text":"@info \"Benchmarking latent_heat_vapor functions...\";\n@btime latent_heat_vapor($rand_T);\nnothing #hide","category":"page"},{"location":"generated/benchmarks/#Saturation-vapor-pressure","page":"Benchmarks","title":"Saturation vapor pressure","text":"","category":"section"},{"location":"generated/benchmarks/","page":"Benchmarks","title":"Benchmarks","text":"@info \"Benchmarking saturation_vapor_pressure functions...\";\n@btime pressure_correction($rand_T, $rand_Ψ);\n@btime saturation_vapor_pressure($rand_T);\n@btime saturation_vapor_pressure($rand_T, $rand_Ψ);\n@btime saturation_vapor_pressure_slope($rand_T);\n@btime saturation_vapor_pressure_slope($rand_T, $rand_Ψ);\nnothing #hide","category":"page"},{"location":"generated/benchmarks/#Surface-tension","page":"Benchmarks","title":"Surface tension","text":"","category":"section"},{"location":"generated/benchmarks/","page":"Benchmarks","title":"Benchmarks","text":"@info \"Benchmarking surface_tension functions...\";\n@btime surface_tension($rand_T);\n@btime relative_surface_tension($rand_T);\nnothing #hide","category":"page"},{"location":"generated/benchmarks/#Viscosity","page":"Benchmarks","title":"Viscosity","text":"","category":"section"},{"location":"generated/benchmarks/","page":"Benchmarks","title":"Benchmarks","text":"@info \"Benchmarking viscosity functions...\";\n@btime viscosity($rand_T);\n@btime relative_viscosity($rand_T);\nnothing #hide","category":"page"},{"location":"generated/benchmarks/","page":"Benchmarks","title":"Benchmarks","text":"","category":"page"},{"location":"generated/benchmarks/","page":"Benchmarks","title":"Benchmarks","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/examples/","page":"Examples","title":"Examples","text":"EditURL = \"https://github.com/Yujie-W/WaterPhysics.jl/blob/master/docs/src/examples/examples.jl\"","category":"page"},{"location":"generated/examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"generated/examples/","page":"Examples","title":"Examples","text":"# load packages\nusing PyPlot\nusing WaterPhysics\nFT = Float32;\n\n# define preview_data function\nfunction preview_data(\n            xs::Array{FT,1},\n            ys::Array{FT,1},\n            title::String,\n            xlab::String,\n            ylab::String\n) where {FT<:AbstractFloat}\n    fig = figure(title, figsize=(4,3));\n    ax0 = fig.add_subplot(1,1,1);\n    ax0.plot(xs, ys);\n    ax0.set_xlabel(xlab);\n    ax0.set_ylabel(ylab);\n    fig.set_tight_layout(true);\n\n    return fig\nend","category":"page"},{"location":"generated/examples/#Capilary-pressure","page":"Examples","title":"Capilary pressure","text":"","category":"section"},{"location":"generated/examples/#As-a-function-of-radius","page":"Examples","title":"As a function of radius","text":"","category":"section"},{"location":"generated/examples/","page":"Examples","title":"Examples","text":"Rs = collect(FT, 1:0.5:30) .* FT(1e-6);\nPc = capillary_pressure.(Rs, FT(298.15));\n\npreview_data(Rs .* FT(1e6), Pc .* FT(1e-3),\n             \"Pc ~ Radius\", \"Radius (μm)\", \"Capillary pressure (kPa)\")","category":"page"},{"location":"generated/examples/#As-a-function-of-contact-angle","page":"Examples","title":"As a function of contact angle","text":"","category":"section"},{"location":"generated/examples/","page":"Examples","title":"Examples","text":"αs = collect(FT, 0:1:90);\nPc = capillary_pressure.(FT(10 * 1e-6), FT(298.15), αs);\n\npreview_data(αs, Pc .* FT(1e-3),\n             \"Pc ~ α\", \"Contact angle (°)\", \"Capillary pressure (kPa)\")","category":"page"},{"location":"generated/examples/#As-a-function-of-temperature-(due-to-surface-tension)","page":"Examples","title":"As a function of temperature (due to surface tension)","text":"","category":"section"},{"location":"generated/examples/","page":"Examples","title":"Examples","text":"Ts = collect(FT, 0:1:50) .+ FT(273.15);\nPc = capillary_pressure.(FT(10 * 1e-6), Ts);\n\npreview_data(Ts .- FT(273.15), Pc .* FT(1e-3),\n             \"Pc ~ T\", \"Temperature (°C)\", \"Capillary pressure (kPa)\")","category":"page"},{"location":"generated/examples/#Diffusive-coefficient","page":"Examples","title":"Diffusive coefficient","text":"","category":"section"},{"location":"generated/examples/#Relative-coefficient-as-a-function-of-temperature","page":"Examples","title":"Relative coefficient as a function of temperature","text":"","category":"section"},{"location":"generated/examples/","page":"Examples","title":"Examples","text":"Ts = collect(FT, 0:1:50) .+ FT(273.15);\nDr = relative_diffusive_coefficient.(Ts);\n\npreview_data(Ts .- FT(273.15), Dr,\n             \"rDc ~ T\", \"Temperature (°C)\", \"Relative diffusive coefficient\")","category":"page"},{"location":"generated/examples/#Relative-coefficient-as-a-function-of-temperature-2","page":"Examples","title":"Relative coefficient as a function of temperature","text":"","category":"section"},{"location":"generated/examples/","page":"Examples","title":"Examples","text":"Ts = collect(FT, 0:1:50) .+ FT(273.15);\nDs = diffusive_coefficient.(Ts, [TraceGasCO₂{FT}()], [TraceGasAir{FT}()]);\n\npreview_data(Ts .- FT(273.15), Ds,\n             \"Dc ~ T\", \"Temperature (°C)\", \"Diffusive coefficient (m² s⁻¹)\")","category":"page"},{"location":"generated/examples/#Latent-heat","page":"Examples","title":"Latent heat","text":"","category":"section"},{"location":"generated/examples/#λ-of-liquid-water-as-a-function-of-temperature","page":"Examples","title":"λ of liquid water as a function of temperature","text":"","category":"section"},{"location":"generated/examples/","page":"Examples","title":"Examples","text":"Ts = collect(FT, 0:1:50) .+ FT(273.15);\nλs = latent_heat_vapor.(Ts);\n\npreview_data(Ts .- FT(273.15), λs,\n             \"λ ~ T\", \"Temperature (°C)\", \"Latent heat (J kg⁻¹)\")","category":"page"},{"location":"generated/examples/#Saturation-vapor-pressure","page":"Examples","title":"Saturation vapor pressure","text":"","category":"section"},{"location":"generated/examples/#Saturated-water-vapor-pressure-at-flat-surface","page":"Examples","title":"Saturated water vapor pressure at flat surface","text":"","category":"section"},{"location":"generated/examples/","page":"Examples","title":"Examples","text":"Ts = collect(FT, 0:1:50) .+ FT(273.15);\nPs = saturation_vapor_pressure.(Ts);\n\npreview_data(Ts .- FT(273.15), Ps,\n             \"Ps ~ T\", \"Temperature (°C)\", \"Saturation vapor pressure (Pa)\")","category":"page"},{"location":"generated/examples/#Saturated-water-vapor-pressure-at-curved-surface-(Kelvin-equation)","page":"Examples","title":"Saturated water vapor pressure at curved surface (Kelvin equation)","text":"","category":"section"},{"location":"generated/examples/","page":"Examples","title":"Examples","text":"Ψs = collect(FT, -5:0.1:5) .* FT(1e6);\nPs = saturation_vapor_pressure.(FT(298.15), Ψs);\n\npreview_data(Ψs .* FT(1e-6), Ps,\n             \"Ps ~ Ψs\",\n             \"Water potential (MPa)\", \"Saturation vapor pressure (Pa)\")","category":"page"},{"location":"generated/examples/#Surface-tension","page":"Examples","title":"Surface tension","text":"","category":"section"},{"location":"generated/examples/#Relative-γ-of-water-air-interface-as-a-function-of-temperature","page":"Examples","title":"Relative γ of water-air interface as a function of temperature","text":"","category":"section"},{"location":"generated/examples/","page":"Examples","title":"Examples","text":"Ts = collect(FT, 0:1:50) .+ FT(273.15);\nγr = relative_surface_tension.(Ts);\n\npreview_data(Ts .- FT(273.15), γr,\n             \"rγ ~ T\", \"Temperature (°C)\", \"Relative surface tension\")","category":"page"},{"location":"generated/examples/#γ-of-water-air-interface-as-a-function-of-temperature","page":"Examples","title":"γ of water-air interface as a function of temperature","text":"","category":"section"},{"location":"generated/examples/","page":"Examples","title":"Examples","text":"Ts = collect(FT, 0:1:50) .+ FT(273.15);\nγs = surface_tension.(Ts);\n\npreview_data(Ts .- FT(273.15), γs,\n             \"γ ~ T\", \"Temperature (°C)\", \"Surface tension (N m⁻¹)\")","category":"page"},{"location":"generated/examples/#Viscosity","page":"Examples","title":"Viscosity","text":"","category":"section"},{"location":"generated/examples/#Relative-μ-of-water-as-a-function-of-temperature","page":"Examples","title":"Relative μ of water as a function of temperature","text":"","category":"section"},{"location":"generated/examples/","page":"Examples","title":"Examples","text":"Ts = collect(FT, 0:1:50) .+ FT(273.15);\nμr = relative_viscosity.(Ts);\n\npreview_data(Ts .- FT(273.15), μr,\n             \"rμ ~ T\", \"Temperature (°C)\", \"Relative viscosity\")","category":"page"},{"location":"generated/examples/#Relative-μ-of-water-as-a-function-of-temperature-2","page":"Examples","title":"Relative μ of water as a function of temperature","text":"","category":"section"},{"location":"generated/examples/","page":"Examples","title":"Examples","text":"Ts = collect(FT, 0:1:50) .+ FT(273.15);\nμs = viscosity.(Ts);\n\npreview_data(Ts .- FT(273.15), μs,\n             \"μ ~ T\", \"Temperature (°C)\", \"Viscosity (Pa s)\")","category":"page"},{"location":"generated/examples/","page":"Examples","title":"Examples","text":"","category":"page"},{"location":"generated/examples/","page":"Examples","title":"Examples","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#WaterPhysics.jl","page":"Home","title":"WaterPhysics.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Temperature dependencies of water and other trace molecule physical properties. See WaterPhysics.jl for the source code.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"julia> using Pkg;\njulia> Pkg.add(\"WaterPhysics\");","category":"page"},{"location":"#Example","page":"Home","title":"Example","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using WaterPhysics\n\n# calculate the relative viscosity of liquid water at 300 K\nf_vis = relative_viscosity(300.0);","category":"page"},{"location":"API/#API","page":"API","title":"API","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"CurrentModule = WaterPhysics","category":"page"},{"location":"API/#Trace-molecule","page":"API","title":"Trace molecule","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"AbstractTrace\nAbstractTraceGas\nAbstractTraceLiquid\nTraceGasAir\nTraceGasCO₂\nTraceGasH₂O\nTraceGasO₂\nTraceLiquidH₂O","category":"page"},{"location":"API/#WaterPhysics.AbstractTrace","page":"API","title":"WaterPhysics.AbstractTrace","text":"WaterPhysics uses the multiple dispatch approach to calculate the temperature     and pressure dependent physical properties of water and other molecules,     such as CO₂. The trace molecules and mediums are catergorized to gas or     liquid subject to a general type AbstractTrace. Hierarchy of     AbstractTrace:\n\nAbstractTraceGas\nAbstractTraceLiquid\n\nabstract type AbstractTrace\n\n\n\n\n\n","category":"type"},{"location":"API/#WaterPhysics.AbstractTraceGas","page":"API","title":"WaterPhysics.AbstractTraceGas","text":"The gas can be either the target trace molecule (e.g., when computing diffusive     coefficient of CO₂ in water using diffusive_coefficient) or the     medium (e.g., when computing diffusive coefficient or CO₂ in air using     diffusive_coefficient). Currently, WaterPhysics supports the     following subtypes of AbstractTraceGas:\n\nTraceGasAir\nTraceGasCO₂\nTraceGasH₂O\nTraceGasO₂\n\nabstract type AbstractTraceGas <: WaterPhysics.AbstractTrace{FT<:AbstractFloat}\n\n\n\n\n\n","category":"type"},{"location":"API/#WaterPhysics.AbstractTraceLiquid","page":"API","title":"WaterPhysics.AbstractTraceLiquid","text":"The liquid can be either the medium for gas (e.g., when computing diffusive     coefficient of CO₂ in water using diffusive_coefficient) or the     target molecule (e.g., when computing surface tension of water using     surface_tension). Currently. WaterPhysics supports the     following subtypes of AbstractTraceLiquid:\n\nTraceLiquidH₂O\n\nabstract type AbstractTraceLiquid <: WaterPhysics.AbstractTrace{FT<:AbstractFloat}\n\n\n\n\n\n","category":"type"},{"location":"API/#WaterPhysics.TraceGasAir","page":"API","title":"WaterPhysics.TraceGasAir","text":"Identity trace label for air.\n\nstruct TraceGasAir{FT<:AbstractFloat} <: WaterPhysics.AbstractTraceGas{FT<:AbstractFloat}\n\n\n\n\n\n","category":"type"},{"location":"API/#WaterPhysics.TraceGasCO₂","page":"API","title":"WaterPhysics.TraceGasCO₂","text":"Identity trace label for gas phase CO₂.\n\nstruct TraceGasCO₂{FT<:AbstractFloat} <: WaterPhysics.AbstractTraceGas{FT<:AbstractFloat}\n\nFields\n\nd_air::AbstractFloat\nDiffusive coefficient in air in [m² s⁻¹]\na_298::AbstractFloat\nHydrodynamic radius of the solute in [m]\na_a::AbstractFloat\nCoefficient to make temperature correction over ydrodynamic radius\nd_water::AbstractFloat\nDiffusive coefficient in liquid water in [m² s⁻¹]\n\n\n\n\n\n","category":"type"},{"location":"API/#WaterPhysics.TraceGasH₂O","page":"API","title":"WaterPhysics.TraceGasH₂O","text":"Identity trace label for gas phase H₂O.\n\nstruct TraceGasH₂O{FT<:AbstractFloat} <: WaterPhysics.AbstractTraceGas{FT<:AbstractFloat}\n\n\n\n\n\n","category":"type"},{"location":"API/#WaterPhysics.TraceGasO₂","page":"API","title":"WaterPhysics.TraceGasO₂","text":"Identity trace label for gas phase O₂.\n\nstruct TraceGasO₂{FT<:AbstractFloat} <: WaterPhysics.AbstractTraceGas{FT<:AbstractFloat}\n\nFields\n\nd_air::AbstractFloat\nDiffusive coefficient in air in [m² s⁻¹]\nd_water::AbstractFloat\nDiffusive coefficient in liquid water in [m² s⁻¹]\n\n\n\n\n\n","category":"type"},{"location":"API/#WaterPhysics.TraceLiquidH₂O","page":"API","title":"WaterPhysics.TraceLiquidH₂O","text":"Identity trace label for liquid phase H₂O.\n\nstruct TraceLiquidH₂O{FT<:AbstractFloat} <: WaterPhysics.AbstractTraceLiquid{FT<:AbstractFloat}\n\nFields\n\nγ_cor::AbstractFloat\nSurface tension coefficient correction\nγ_exp::AbstractFloat\nSurface tension coefficient exponent\nγ_k::AbstractFloat\nSurface tension coefficient k in [N m⁻¹]\nγ_ref::AbstractFloat\nSurface tension at 298.15 K in [N m⁻¹]\nγ_T_c::AbstractFloat\nSurface tension coefficient T_crit in [K]\nυ_A::AbstractFloat\nViscosity coefficient A in [Pa s]\nυ_B::AbstractFloat\nViscosity coefficient B in [K]\nυ_C::AbstractFloat\nViscosity coefficient C in [K⁻¹]\nυ_D::AbstractFloat\nViscosity coefficient D in [K⁻²]\n\n\n\n\n\n","category":"type"},{"location":"API/#Capillary-pressure","page":"API","title":"Capillary pressure","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"capillary_pressure\ncapillary_pressure(r::FT, T::FT, med::TraceLiquidH₂O{FT}) where\n    {FT<:AbstractFloat}\ncapillary_pressure(r::FT, T::FT, α::FT, med::TraceLiquidH₂O{FT}) where\n    {FT<:AbstractFloat}","category":"page"},{"location":"API/#WaterPhysics.capillary_pressure","page":"API","title":"WaterPhysics.capillary_pressure","text":"Capillary pressure of the trace liquid in a pipe is a function of surface     tension (γ), pipe raduis (r), and contact angle (α):\n\nP_c = dfrac2  γ  textcos(α)r\n\nWaterPhysics supports the following methods to compute capillary pressure:\n\ncapillary_pressure(r, T)\ncapillary_pressure(r, T, med)\n\ndefined at /home/runner/work/WaterPhysics.jl/WaterPhysics.jl/src/WaterPhysics.jl:288.\n\ncapillary_pressure(r, T, α)\ncapillary_pressure(r, T, α, med)\n\ndefined at /home/runner/work/WaterPhysics.jl/WaterPhysics.jl/src/WaterPhysics.jl:317.\n\n\n\n\n\n","category":"function"},{"location":"API/#WaterPhysics.capillary_pressure-Union{Tuple{FT}, Tuple{FT,FT,TraceLiquidH₂O{FT}}} where FT<:AbstractFloat","page":"API","title":"WaterPhysics.capillary_pressure","text":"When the contact angle is not given, capillary pressure is computed using\n\ncapillary_pressure(\n            r::FT,\n            T::FT,\n            med::TraceLiquidH₂O{FT} = TraceLiquidH₂O{FT}()\n) where {FT<:AbstractFloat}\n\nCapillary pressure of trace liquid in [Pa], given\n\nr Curvature radius in [m]\nT Trace liquid temperature in [K]\nmed Medium. Optional. Default is liquid water\n\n\n\n\n\n","category":"method"},{"location":"API/#WaterPhysics.capillary_pressure-Union{Tuple{FT}, Tuple{FT,FT,FT,TraceLiquidH₂O{FT}}} where FT<:AbstractFloat","page":"API","title":"WaterPhysics.capillary_pressure","text":"When the contact angle is given, capillary pressure is computed using\n\ncapillary_pressure(\n            r::FT,\n            T::FT,\n            α::FT,\n            med::TraceLiquidH₂O{FT} = TraceLiquidH₂O{FT}()\n) where {FT<:AbstractFloat}\n\nCapillary pressure of trace liquid in [Pa], given\n\nr Pipe radius in [m]\nT Trace liquid temperature in [K]\nα Contact angle in [°]\nmed Medium. Optional. Default is liquid water\n\n\n\n\n\n","category":"method"},{"location":"API/#Diffusive-coefficient","page":"API","title":"Diffusive coefficient","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"diffusive_coefficient\ndiffusive_coefficient(T::FT, mol::Union{TraceGasCO₂{FT}, TraceGasH₂O{FT},\n    TraceGasO₂{FT}}, med::TraceGasAir{FT}) where {FT<:AbstractFloat}\nrelative_diffusive_coefficient\nrelative_diffusive_coefficient(T::FT, mol::AbstractTraceGas{FT},\n    med::AbstractTraceGas{FT}) where {FT<:AbstractFloat}\nrelative_diffusive_coefficient(T::FT, mol::Union{TraceGasCO₂{FT},\n    TraceGasN₂{FT}}, med::TraceLiquidH₂O{FT}) where {FT<:AbstractFloat}","category":"page"},{"location":"API/#WaterPhysics.diffusive_coefficient","page":"API","title":"WaterPhysics.diffusive_coefficient","text":"Diffusion of trace molecules in medium is temperature dependent, to calculate     this temperature dependency, we provide a function to quick estimate this     value for different trace molecules using diffusive_coefficient. The     supported methods are:\n\ndiffusive_coefficient(T, mol, med)\n\ndefined at /home/runner/work/WaterPhysics.jl/WaterPhysics.jl/src/WaterPhysics.jl:374.\n\ndiffusive_coefficient(T, mol, med)\n\ndefined at /home/runner/work/WaterPhysics.jl/WaterPhysics.jl/src/WaterPhysics.jl:404.\n\n\n\n\n\n","category":"function"},{"location":"API/#WaterPhysics.diffusive_coefficient-Union{Tuple{FT}, Tuple{FT,Union{TraceGasCO₂{FT}, TraceGasH₂O{FT}, TraceGasO₂{FT}},TraceGasAir{FT}}} where FT<:AbstractFloat","page":"API","title":"WaterPhysics.diffusive_coefficient","text":"For the diffusive coefficient of gas in air, the coefficient is simply treated     as a function of temperature and the reference coefficient at 298.15 K:\n\nD = D_\\text{ref} ⋅ \\left( \\dfrac{T}{298.15} \\right)^{1.8}\n\nThis temperature correction is also available as a stand alone function:     relative_diffusive_coefficient.\n\ndiffusive_coefficient(\n            T::FT,\n            mol::Union{TraceGasCO₂{FT}, TraceGasH₂O{FT}, TraceGasO₂{FT}},\n            med::TraceGasAir{FT}\n) where {FT<:AbstractFloat}\n\nDiffusive coefficient of trace molecule in [m² s⁻¹], given\n\nT Trace medium temperature in [K]\nmol Trace molecule\nmed Diffusion medium (air)\n\n\n\n\n\n","category":"method"},{"location":"API/#WaterPhysics.relative_diffusive_coefficient","page":"API","title":"WaterPhysics.relative_diffusive_coefficient","text":"The temperature dependency of diffusive coefficient impacts leaf gas exchange     via change the maximal stomatal conductance to H₂O vapor and CO₂, given     that Since the stomatal conductance should not exceed its structural limit.     To account for this effect, we provide a function to calculate the     diffusive coefficient relative to 25 Celcius.\n\nrelative_diffusive_coefficient(T)\nrelative_diffusive_coefficient(T, mol)\nrelative_diffusive_coefficient(T, mol, med)\n\ndefined at /home/runner/work/WaterPhysics.jl/WaterPhysics.jl/src/WaterPhysics.jl:450.\n\nrelative_diffusive_coefficient(T, mol, med)\n\ndefined at /home/runner/work/WaterPhysics.jl/WaterPhysics.jl/src/WaterPhysics.jl:477.\n\n\n\n\n\n","category":"function"},{"location":"API/#WaterPhysics.relative_diffusive_coefficient-Union{Tuple{FT}, Tuple{FT,WaterPhysics.AbstractTraceGas{FT},WaterPhysics.AbstractTraceGas{FT}}} where FT<:AbstractFloat","page":"API","title":"WaterPhysics.relative_diffusive_coefficient","text":"As mentioned in diffusive_coefficient, relative diffusive coefficient     of target gas in gas medium is calculated as an exponential function of     temperature. The shortcut method is\n\nrelative_diffusive_coefficient(\n            T::FT,\n            mol::AbstractTraceGas{FT} = TraceGasH₂O{FT}(),\n            med::AbstractTraceGas{FT} = TraceGasAir{FT}()\n) where {FT<:AbstractFloat}\n\nRelative diffusive coefficient of trace gas in medium, given\n\nT Water vapor temperature in [K]\nmol Trace molecule. Optional, default is water vapor\nmed Medium. Optional, default is air\n\n\n\n\n\n","category":"method"},{"location":"API/#WaterPhysics.relative_diffusive_coefficient-Union{Tuple{FT}, Tuple{FT,Union{TraceGasCO₂{FT}, TraceGasN₂{FT}},TraceLiquidH₂O{FT}}} where FT<:AbstractFloat","page":"API","title":"WaterPhysics.relative_diffusive_coefficient","text":"As to disolved gas diffsuin in liquid medium, the relative coefficient is also     computed based on the empirical formulation from Cadogan et al. (2014).\n\nrelative_diffusive_coefficient(\n            T::FT,\n            mol::AbstractTraceGas{FT}\n            med::AbstractTraceGas{FT}\n) where {FT<:AbstractFloat}\n\nRelative diffusive coefficient of trace gas in medium, given\n\nT Water vapor temperature in [K]\nmol Trace molecule. Optional, default is water vapor\nmed Medium. Optional, default is air\n\n\n\n\n\n","category":"method"},{"location":"API/#Latent-heat-of-evaporation","page":"API","title":"Latent heat of evaporation","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"latent_heat_vapor\nlatent_heat_vapor(T::FT, med::TraceLiquidH₂O{FT}) where {FT<:AbstractFloat}","category":"page"},{"location":"API/#WaterPhysics.latent_heat_vapor","page":"API","title":"WaterPhysics.latent_heat_vapor","text":"Water evaporation from liquid phase is a key process to regulate leaf     temperature, and to best represent this process. We computed the latent     heat coefficient from water temperature:\n\nlatent_heat_vapor(T)\nlatent_heat_vapor(T, med)\n\ndefined at /home/runner/work/WaterPhysics.jl/WaterPhysics.jl/src/WaterPhysics.jl:523.\n\n\n\n\n\n","category":"function"},{"location":"API/#WaterPhysics.latent_heat_vapor-Union{Tuple{FT}, Tuple{FT,TraceLiquidH₂O{FT}}} where FT<:AbstractFloat","page":"API","title":"WaterPhysics.latent_heat_vapor","text":"latent_heat_vapor(\n            T::FT,\n            med::TraceLiquidH₂O{FT} = TraceLiquidH₂O{FT}()\n) where {FT<:AbstractFloat}\n\nLatent heat of vaporization in [J kg⁻¹], given\n\nT Medium temperature in [K]\nmed Medium. Optional. Default is liquid water\n\n\n\n\n\n","category":"method"},{"location":"API/#Surface-tension-of-air-water-interface","page":"API","title":"Surface tension of air-water interface","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"surface_tension\nsurface_tension(T::FT, med::TraceLiquidH₂O{FT}) where {FT<:AbstractFloat}\nrelative_surface_tension\nrelative_surface_tension(T::FT, med::TraceLiquidH₂O{FT}) where\n    {FT<:AbstractFloat}","category":"page"},{"location":"API/#WaterPhysics.surface_tension","page":"API","title":"WaterPhysics.surface_tension","text":"When water temperature increases, the surface tension at the air-water     interface decreases. Surface tension changes impacts the plant water     transport via two aspects. First, if surface tension is lower, for a     constant soil water content, the soil matrix potential gets less negative     because the capillary pressure at the air-water interface decreases. And     this is beneficial to plants. Second, the air-water interface at the pit     membrane also has lower capillary pressure when temperature increases,     meaning that the xylem conduits are less resistant to drought-induced     air-seeded cavitation. And this is harmful for plants. Though the surface     tension does not differ much with temperature change within the plant     physiological active range, we account for this effect in our Land model.\n\nsurface_tension(T)\nsurface_tension(T, med)\n\ndefined at /home/runner/work/WaterPhysics.jl/WaterPhysics.jl/src/WaterPhysics.jl:785.\n\n\n\n\n\n","category":"function"},{"location":"API/#WaterPhysics.surface_tension-Union{Tuple{FT}, Tuple{FT,TraceLiquidH₂O{FT}}} where FT<:AbstractFloat","page":"API","title":"WaterPhysics.surface_tension","text":"surface_tension(\n            T::FT,\n            med::TraceLiquidH₂O{FT} = TraceLiquidH₂O{FT}()\n) where {FT<:AbstractFloat}\n\nSurface tension of trace liquid in [N m⁻¹], given\n\nT Liquid water temperature in [K]\nmed Medium. Optional. Default is liquid water\n\nThe equation used is\n\nγ = 02358 \n    left( 1 - dfracTT_c right)^1256 \n    left 1 - 0625  left( 1 - dfracTT_c right) right\n\nSee http://www.iapws.org/relguide/Surf-H2O.html\n\n\n\n\n\n","category":"method"},{"location":"API/#WaterPhysics.relative_surface_tension","page":"API","title":"WaterPhysics.relative_surface_tension","text":"Relative surface tension of trace liquid relative to 298.15 K.\n\nrelative_surface_tension(T)\nrelative_surface_tension(T, med)\n\ndefined at /home/runner/work/WaterPhysics.jl/WaterPhysics.jl/src/WaterPhysics.jl:820.\n\n\n\n\n\n","category":"function"},{"location":"API/#WaterPhysics.relative_surface_tension-Union{Tuple{FT}, Tuple{FT,TraceLiquidH₂O{FT}}} where FT<:AbstractFloat","page":"API","title":"WaterPhysics.relative_surface_tension","text":"relative_surface_tension(\n            T::FT,\n            med::TraceLiquidH₂O{FT} = TraceLiquidH₂O{FT}()\n) where {FT<:AbstractFloat}\n\nRelative surface tension of trace liquid relative to 298.15 K, given\n\nT Liquid water temperature in [K]\nmed Medium. Optional. Default is liquid water\n\n\n\n\n\n","category":"method"},{"location":"API/#Vapor-pressure","page":"API","title":"Vapor pressure","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"saturation_vapor_pressure\nsaturation_vapor_pressure(T::FT, med::TraceLiquidH₂O{FT}) where\n    {FT<:AbstractFloat}\nsaturation_vapor_pressure(T::FT, Ψ::FT, med::TraceLiquidH₂O{FT}) where\n    {FT<:AbstractFloat}\nsaturation_vapor_pressure_slope\nsaturation_vapor_pressure_slope(T::FT, med::TraceLiquidH₂O{FT}) where\n    {FT<:AbstractFloat}\nsaturation_vapor_pressure_slope(T::FT, Ψ::FT,med::TraceLiquidH₂O{FT}) where\n    {FT<:AbstractFloat}\npressure_correction\npressure_correction(T::FT, Ψ::FT, med::TraceLiquidH₂O{FT}) where\n    {FT<:AbstractFloat}","category":"page"},{"location":"API/#WaterPhysics.saturation_vapor_pressure","page":"API","title":"WaterPhysics.saturation_vapor_pressure","text":"When temperature increases, liquid water vapor pressure increases     exponentially. And this correlation is accounted for using the functions     below:\n\nsaturation_vapor_pressure(T)\nsaturation_vapor_pressure(T, med)\n\ndefined at /home/runner/work/WaterPhysics.jl/WaterPhysics.jl/src/WaterPhysics.jl:616.\n\nsaturation_vapor_pressure(T, Ψ)\nsaturation_vapor_pressure(T, Ψ, med)\n\ndefined at /home/runner/work/WaterPhysics.jl/WaterPhysics.jl/src/WaterPhysics.jl:652.\n\n\n\n\n\n","category":"function"},{"location":"API/#WaterPhysics.saturation_vapor_pressure-Union{Tuple{FT}, Tuple{FT,TraceLiquidH₂O{FT}}} where FT<:AbstractFloat","page":"API","title":"WaterPhysics.saturation_vapor_pressure","text":"saturation_vapor_pressure(\n            T::FT,\n            med::TraceLiquidH₂O{FT} = TraceLiquidH₂O{FT}()\n) where {FT<:AbstractFloat}\n\nSaturation vapor pressure in [Pa], given\n\nT Liquid water temperature in [K]\nmed Medium. Optional. Default is liquid water\n\n\n\n\n\n","category":"method"},{"location":"API/#WaterPhysics.saturation_vapor_pressure-Union{Tuple{FT}, Tuple{FT,FT,TraceLiquidH₂O{FT}}} where FT<:AbstractFloat","page":"API","title":"WaterPhysics.saturation_vapor_pressure","text":"saturation_vapor_pressure(\n            T::FT,\n            Ψ::FT,\n            med::TraceLiquidH₂O{FT} = TraceLiquidH₂O{FT}()\n) where {FT<:AbstractFloat}\n\nSaturation vapor pressure in [Pa], given\n\nT Liquid water temperature in [K]\nΨ Liquid water pressure in [Pa], positive/negative for convex/concave   interface; if Ψ is given, pressure_correction is made\nmed Medium. Optional. Default is liquid water\n\n\n\n\n\n","category":"method"},{"location":"API/#WaterPhysics.saturation_vapor_pressure_slope","page":"API","title":"WaterPhysics.saturation_vapor_pressure_slope","text":"First order derivative of saturation vapor pressure.\n\nsaturation_vapor_pressure_slope(T)\nsaturation_vapor_pressure_slope(T, med)\n\ndefined at /home/runner/work/WaterPhysics.jl/WaterPhysics.jl/src/WaterPhysics.jl:693.\n\nsaturation_vapor_pressure_slope(T, Ψ)\nsaturation_vapor_pressure_slope(T, Ψ, med)\n\ndefined at /home/runner/work/WaterPhysics.jl/WaterPhysics.jl/src/WaterPhysics.jl:725.\n\n\n\n\n\n","category":"function"},{"location":"API/#WaterPhysics.saturation_vapor_pressure_slope-Union{Tuple{FT}, Tuple{FT,TraceLiquidH₂O{FT}}} where FT<:AbstractFloat","page":"API","title":"WaterPhysics.saturation_vapor_pressure_slope","text":"saturation_vapor_pressure_slope(\n            T::FT,\n            med::TraceLiquidH₂O{FT} = TraceLiquidH₂O{FT}()\n) where {FT<:AbstractFloat}\n\nFirst order derivative of saturation vapor pressure in [Pa K⁻¹], given\n\nT Liquid water temperature in [K]\nmed Medium. Optional. Default is liquid water\n\nCompute the the 1st order derivative of saturation vapor pressure over a plane     surface by integration of the Clausius-Clapeyron relation.\n\nThe re-arranged Clausius-Clapeyron relation\n\nfracP_sat^*T = P_sat  dfrac LH_0 + Δc_p  (T - T_triple)\n                                         R_v  T^2 \n\n\n\n\n\n","category":"method"},{"location":"API/#WaterPhysics.saturation_vapor_pressure_slope-Union{Tuple{FT}, Tuple{FT,FT,TraceLiquidH₂O{FT}}} where FT<:AbstractFloat","page":"API","title":"WaterPhysics.saturation_vapor_pressure_slope","text":"saturation_vapor_pressure_slope(\n            T::FT,\n            Ψ::FT,\n            med::TraceLiquidH₂O{FT} = TraceLiquidH₂O{FT}()\n) where {FT<:AbstractFloat}\n\nFirst order derivative of saturation vapor pressure in [Pa K⁻¹], given\n\nT Liquid water temperature in [K]\nΨ Liquid water pressure in [Pa], positive/negative for convex/concave   interface; if Ψ is given, pressure_correction is made\nmed Medium. Optional. Default is liquid water\n\n\n\n\n\n","category":"method"},{"location":"API/#WaterPhysics.pressure_correction","page":"API","title":"WaterPhysics.pressure_correction","text":"Yet, the saturation vapor pressure is not only a function of temperature, but     also a function of the air-water interface curvature, known as the Kelvin     equation. The package provide pressure_correction to make the     correction.\n\npressure_correction(T, Ψ)\npressure_correction(T, Ψ, med)\n\ndefined at /home/runner/work/WaterPhysics.jl/WaterPhysics.jl/src/WaterPhysics.jl:582.\n\n\n\n\n\n","category":"function"},{"location":"API/#WaterPhysics.pressure_correction-Union{Tuple{FT}, Tuple{FT,FT,TraceLiquidH₂O{FT}}} where FT<:AbstractFloat","page":"API","title":"WaterPhysics.pressure_correction","text":"pressure_correction(\n            T::FT,\n            Ψ::FT,\n            med::TraceLiquidH₂O{FT} = TraceLiquidH₂O{FT}()\n) where {FT<:AbstractFloat}\n\nKelvin correction factor for saturation vapor pressure, given\n\nT Liquid water temperature in [K]\nΨ Liquid water pressure in [Pa], positive/negative for convex/concave   interface\nmed Medium. Optional. Default is liquid water\n\nThe Kelvin equation is\n\nlog left( dfracP_satP_sat^* right) =\ndfracΨ  V_mR  T\n\n\n\n\n\n","category":"method"},{"location":"API/#Viscosity-of-liquid-water","page":"API","title":"Viscosity of liquid water","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"viscosity\nviscosity(T::FT, med::TraceLiquidH₂O{FT}) where {FT<:AbstractFloat}\nrelative_viscosity\nrelative_viscosity(T::FT, med::TraceLiquidH₂O{FT}) where {FT<:AbstractFloat}","category":"page"},{"location":"API/#WaterPhysics.viscosity","page":"API","title":"WaterPhysics.viscosity","text":"When temperature increases, liquid water viscosuty decreases, meaning that the     resistance for water decreases and the pressure drop per flow rate     decreases. This effect is pretty significant as 1 degree increase of     temperature results in about 2.4% drop in viscosity, and this is very     beneficial to plant water transport. Unfortunately, to our knowledge, very     few models account for this effect when modeling plant hydraulics because     of the difficulty in modeling the energy budget along the flow path. We     plan to have this effect accounted for in our CliMA Land model, by     computing the water tempreature along the flow path and thus the viscosity     change. The functions to be used are:\n\nviscosity(T)\nviscosity(T, med)\n\ndefined at /home/runner/work/WaterPhysics.jl/WaterPhysics.jl/src/WaterPhysics.jl:881.\n\n\n\n\n\n","category":"function"},{"location":"API/#WaterPhysics.viscosity-Union{Tuple{FT}, Tuple{FT,TraceLiquidH₂O{FT}}} where FT<:AbstractFloat","page":"API","title":"WaterPhysics.viscosity","text":"viscosity(T::FT,\n          med::TraceLiquidH₂O{FT} = TraceLiquidH₂O{FT}()\n) where {FT<:AbstractFloat}\n\nViscosity in [Pa s], given\n\nT Liquid water temperature in [K]\nmed Medium. Optional. Default is liquid water\n\nEquation used is\n\nυ = A  exp left( dfracBT + CT + DT^2 right)\n\nand the fitting parameters are from Reid, Prausnitz, & Poling (1987), valid through 273-643 K\n\nA = 1.856E-14 # Pa s\nB = 4209      # K\nC = 0.04527   # K⁻¹\nD = -3.376E-5 # K⁻²\n\n\n\n\n\n","category":"method"},{"location":"API/#WaterPhysics.relative_viscosity","page":"API","title":"WaterPhysics.relative_viscosity","text":"Viscosity relative to 298.15 K\n\nrelative_viscosity(T)\nrelative_viscosity(T, med)\n\ndefined at /home/runner/work/WaterPhysics.jl/WaterPhysics.jl/src/WaterPhysics.jl:927.\n\n\n\n\n\n","category":"function"},{"location":"API/#WaterPhysics.relative_viscosity-Union{Tuple{FT}, Tuple{FT,TraceLiquidH₂O{FT}}} where FT<:AbstractFloat","page":"API","title":"WaterPhysics.relative_viscosity","text":"relative_viscosity(\n            T::FT,\n            med::TraceLiquidH₂O{FT} = TraceLiquidH₂O{FT}()\n) where {FT<:AbstractFloat}\n\nViscosity relative to 298.15 K, given\n\nT Liquid water temperature in [K]\nliquid Optional. Default is liquid water\n\nEquation used is\n\nυ = A  exp left( dfracBT + CT + DT^2 right)\n\nand the fitting parameters are from Reid, Prausnitz, & Poling (1987), valid through 273-643 K\n\nB = 4209      # K\nC = 0.04527   # K⁻¹\nD = -3.376E-5 # K⁻²\n\n\n\n\n\n","category":"method"}]
}
